//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WishNewApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/WishNew")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MadeOfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
                
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MadeOf {
            get {
                return this.MadeOfField;
            }
            set {
                if ((object.ReferenceEquals(this.MadeOfField, value) != true)) {
                    this.MadeOfField = value;
                    this.RaisePropertyChanged("MadeOf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdNo {
            get {
                return this.ProdNoField;
            }
            set {
                if ((this.ProdNoField.Equals(value) != true)) {
                    this.ProdNoField = value;
                    this.RaisePropertyChanged("ProdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProducts", ReplyAction="http://tempuri.org/IService/GetProductsResponse")]
        WishNewApp.ServiceReference1.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProducts", ReplyAction="http://tempuri.org/IService/GetProductsResponse")]
        System.Threading.Tasks.Task<WishNewApp.ServiceReference1.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertNewProduct", ReplyAction="http://tempuri.org/IService/InsertNewProductResponse")]
        void InsertNewProduct(WishNewApp.ServiceReference1.Product newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertNewProduct", ReplyAction="http://tempuri.org/IService/InsertNewProductResponse")]
        System.Threading.Tasks.Task InsertNewProductAsync(WishNewApp.ServiceReference1.Product newProduct);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/tryAdding100Elements", ReplyAction="http://tempuri.org/IService/tryAdding100ElementsResponse")]
        void tryAdding100Elements(WishNewApp.ServiceReference1.Product[] listOfProducts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/tryAdding100Elements", ReplyAction="http://tempuri.org/IService/tryAdding100ElementsResponse")]
        System.Threading.Tasks.Task tryAdding100ElementsAsync(WishNewApp.ServiceReference1.Product[] listOfProducts);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteElement", ReplyAction="http://tempuri.org/IService/deleteElementResponse")]
        void deleteElement(WishNewApp.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteElement", ReplyAction="http://tempuri.org/IService/deleteElementResponse")]
        System.Threading.Tasks.Task deleteElementAsync(WishNewApp.ServiceReference1.Product product);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WishNewApp.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WishNewApp.ServiceReference1.IService>, WishNewApp.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WishNewApp.ServiceReference1.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<WishNewApp.ServiceReference1.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public void InsertNewProduct(WishNewApp.ServiceReference1.Product newProduct) {
            base.Channel.InsertNewProduct(newProduct);
        }
        
        public System.Threading.Tasks.Task InsertNewProductAsync(WishNewApp.ServiceReference1.Product newProduct) {
            return base.Channel.InsertNewProductAsync(newProduct);
        }
        
        public void tryAdding100Elements(WishNewApp.ServiceReference1.Product[] listOfProducts) {
            base.Channel.tryAdding100Elements(listOfProducts);
        }
        
        public System.Threading.Tasks.Task tryAdding100ElementsAsync(WishNewApp.ServiceReference1.Product[] listOfProducts) {
            return base.Channel.tryAdding100ElementsAsync(listOfProducts);
        }
        
        public void deleteElement(WishNewApp.ServiceReference1.Product product) {
            base.Channel.deleteElement(product);
        }
        
        public System.Threading.Tasks.Task deleteElementAsync(WishNewApp.ServiceReference1.Product product) {
            return base.Channel.deleteElementAsync(product);
        }
    }
}
